Building
========

  mkdir build && cd build
  cmake .. && make
  
  OR
  
  make -f Makefile.cvs
  cd build && make

The binary will be created in <build-folder>/bin

To install sdp complete package in ${HOME}
make install

Small hack
----------

Run run.sh, it will configure, build, install and execute the application.


Packaging
=========

1. On Linux:
  make package

  To force deb:
    cpack -G DEB

  To force rom:
    cpack -G RPM

2. On Mac: (gcc, g++, make, cmake, qt 4.6+ etc. must be installed...)
  cd contribs
  sh contribs-mac.sh
  This will by default create a Mac Bundle, vlmc.app in /build/bin

  To create a dmg image:
    Uncomment #dmg in /src/CMakeLists.txt, at the end of the file.
    and follow the build process, the dmg will be created in /build/bin

3. To cross-compile and package on linux for Windows: (mingw, wine, nsis must be installed...)

  cd contribs
  sh contribs.sh
  cd ..
  mkdir win32 && cd win32
  cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchain-win32.cmake -DQT_MOC_EXECUTABLE=../contribs/tools/moc.exe ..
  make
  make installer

  This will create an .exe installer in /win32/bin

Distribution via Launchpad
==========================

Launchpad.net provides PPA facility for distribution of debian builds.
The /debian folder holds debian package building rules.

You build and upload your source pkgs by:
  debuild -k<pgp key ID>
  debuild -k<pgp key ID> -S -sa # creates only the source pkg
  dput ppa:<ppa-id>/<pkg> <source.changes>

To add/install the pkg, one can do:
  sudo add-apt-repository ppa:<ppa-id>/<pkg>
  sudo apt-get update
  sudo apt-get install <pkg>